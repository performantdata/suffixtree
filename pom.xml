<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright Â© 2015 Performant Data LLC. All rights reserved.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.performantdata</groupId>
  <artifactId>suffixtree</artifactId>
  <version>0.0.1</version>

  <name>suffix tree</name>
  <description>Suffix tree implementation.</description>
  <inceptionYear>2008</inceptionYear>
  <url>https://github.com/performantdata/suffixtree</url>
  <organization>
    <name>Performant Data LLC</name>
    <url>http://performantdata.com</url>
  </organization>
  <developers>
    <developer>
      <name>Michael</name>
      <organization>Performant Data LLC</organization>
      <timezone>America/Los_Angeles</timezone>
    </developer>
  </developers>
  <scm>
    <url>https://github.com/performantdata/suffixtree</url>
    <connection>scm:git:https://github.com/performantdata/suffixtree.git</connection>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/performantdata/suffixtree/issues</url>
  </issueManagement>

  <properties>
    <scala.version>2.11.7</scala.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Required for scala-maven-plugin. -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging_2.11</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.11</artifactId>
      <version>2.2.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jol</groupId>
      <artifactId>jol-core</artifactId>
      <version>0.3.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <!-- Set the versions of the plug-ins that we use. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.8,)</versionRange>
                    <goals><goal>run</goal></goals>
                  </pluginExecutionFilter>
                  <action><ignore/></action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Disable the Maven Java compiler and Surefire tests. -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-deprecation</arg>
                <arg>-explaintypes</arg>
                <arg>-feature</arg>
                <arg>-unchecked</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- From http://scalatest.org/user_guide/using_the_scalatest_maven_plugin -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
          <argLine>-Xmx6g</argLine>
        </configuration>
        <executions>
          <execution>
            <goals><goal>test</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- Download the test data.
           I use maven-antrun-plugin because maven-download-plugin didn't look as well maintained.
           and the wagon-maven-plugin isn't intended for this. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-resources</phase>
            <goals><goal>run</goal></goals>
            <configuration>
              <target description="Download the human chromosome 1, hg38 version, FASTA format.">
                <get src="http://hgdownload.cse.ucsc.edu/goldenPath/dm6/bigZips/dm6.fa.gz"
                  dest="${project.build.directory}/src/test/resources/"
                  usetimestamp="true" skipexisting="true" verbose="on" ignoreerrors="true"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Produce Scala API docs. -->
  <reporting>
    <plugins>
      <!--
       From http://davidb.github.io/scala-maven-plugin/example_doc.html
       See https://maven.apache.org/plugins/maven-site-plugin/maven-3.html for why we follow the Maven 2.x
       configuration style, instead of the Maven 3.0 style using <reportPlugins>.
       -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version><!-- should find this from <pluginManagement>, but still needed for Maven 3.4 -->
      </plugin>
    </plugins>
  </reporting>
</project>
